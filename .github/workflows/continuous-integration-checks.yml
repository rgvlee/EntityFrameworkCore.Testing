name: Continuous Integration Checks

on:
  push:
  schedule:
    - cron: "0 9 * * 3"

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Build
        run: dotnet build --configuration Release

      - name: List dependencies
        run: |
          dotnet list src/EntityFrameworkCore.Testing.Common package
          dotnet list src/EntityFrameworkCore.Testing.Moq package
          dotnet list src/EntityFrameworkCore.Testing.NSubstitute package

      - name: Test
        run: dotnet test --configuration Release --no-build /p:CollectCoverage=\"true\" /p:Exclude=\"[*.Tests]*,[rgvlee.Core.*]*\" /p:SkipAutoProps=\"false\" /p:IncludeTestAssembly=\"false\" /p:CoverletOutput=\"../../CoverageResults/\" /p:MergeWith=\"../../CoverageResults/coverage.json\" /p:CoverletOutputFormat=\"opencover,json\" -m:1

      - name: Update dependencies
        run: |
          dotnet add src/EntityFrameworkCore.Testing.Common package Microsoft.EntityFrameworkCore.InMemory --version 5.*
          dotnet add src/EntityFrameworkCore.Testing.Common package Microsoft.EntityFrameworkCore.SqlServer --version 5.*
          dotnet add src/EntityFrameworkCore.Testing.Common package Microsoft.Extensions.Logging --version 5.*
          dotnet add src/EntityFrameworkCore.Testing.Common package rgvlee.Core

          dotnet add src/EntityFrameworkCore.Testing.Common.Tests package Microsoft.Extensions.Logging.Console --version 5.*

          dotnet add src/EntityFrameworkCore.Testing.Moq package Moq

          dotnet add src/EntityFrameworkCore.Testing.NSubstitute package NSubstitute

      - name: List dependencies
        run: |
          dotnet list src/EntityFrameworkCore.Testing.Common package
          dotnet list src/EntityFrameworkCore.Testing.Moq package
          dotnet list src/EntityFrameworkCore.Testing.NSubstitute package

      - name: Test with updated dependencies
        run: dotnet test --configuration Release /p:CollectCoverage=\"false\" /p:Exclude=\"[*.Tests]*,[rgvlee.Core.*]*\" /p:SkipAutoProps=\"false\" /p:IncludeTestAssembly=\"false\" -m:1

      - name: Send coverage results to Codacy
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./CoverageResults/coverage.opencover.xml
